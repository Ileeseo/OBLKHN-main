nname: OBLKHN_test_X2
model_type: SRModel
scale: 2
num_gpu: auto  # set num_gpu: 0 for cpu mode
manual_seed: 0

datasets:
  test_1:  # the 1st test dataset
    name: Sandstone2D
    type: PairedImageDataset
    dataroot_gt: ../datasets/RockDataSet/DeepRockSR_test/sandstone2D/sandstone2D_test_HR
    dataroot_lq: ../datasets/RockDataSet/DeepRockSR_test/sandstone2D/sandstone2D_test_LR_default_X2
    io_backend:
      type: disk
  # test_2:  # the 2nd test dataset
  #   name: Set14
  #   type: PairedImageDataset
  #   dataroot_gt: F:\CNN_Trans\testsets\Set14\HR_mod2
  #   dataroot_lq: F:\CNN_Trans\testsets\Set14\X2
  #   io_backend:
  #     type: disk
  # test_3: # the 3rd test dataset
  #   name: Urban100
  #   type: PairedImageDataset
  #   dataroot_gt: F:\CNN_Trans\testsets\urban100\HR_mod2
  #   dataroot_lq: F:\CNN_Trans\testsets\urban100\X2
  #   io_backend:
  #     type: disk
  # test_4: # the 4th test dataset
  #   name: Manga109
  #   type: PairedImageDataset
  #   dataroot_gt: F:\CNN_Trans\testsets\Manga109\HR_mod2
  #   dataroot_lq: F:\CNN_Trans\testsets\Manga109\X2
  #   io_backend:
  #     type: disk
  # test_5: # the 5th test dataset
  #   name: BSDS100
  #   type: PairedImageDataset
  #   dataroot_gt: F:\CNN_Trans\testsets\BSDS100\HR_mod2
  #   dataroot_lq: F:\CNN_Trans\testsets\BSDS100\X2
  #   io_backend:
  #     type: disk

#  test_3:
#    name: DIV2K100
#    type: PairedImageDataset
#    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR
#    dataroot_lq: datasets/DIV2K/DIV2K_valid_LR_bicubic/X2
#    filename_tmpl: '{}x2'
#    io_backend:
#      type: disk

# network structures
network_g:
  type: OBLKHN
  upscale: 2

# path
path:
  pretrain_network_g: ../pretrained_model/OBLKHN_sandx2.pth.pth
  strict_load_g: true
  #param_key_g: ../MDRN_sand_x4_net_del_rep_x4(2).pth

# validation settings
val:
  save_img: true
  suffix: ~  # add suffix to saved images, if None, use exp name

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 2
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 2
      test_y_channel: true
