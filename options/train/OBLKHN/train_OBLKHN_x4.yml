# general settings
name: OBLKHN_X4_3e-3
model_type: SRModel
scale: 4
num_gpu: auto  # set num_gpu: 0 for cpu mode
manual_seed: 10

# dataset and data loader settings
datasets:
  train:
    name: Sandstone
    type: PairedImageDataset
    dataroot_gt: ../datasets/RockDataSet/DeepRockSR_train/sandstone2D/sandstone2D_train_HR
    dataroot_lq: ../datasets/RockDataSet/DeepRockSR_train/sandstone2D/sandstone2D_train_LR_default_X4
#    meta_info_file: basicsr/data/meta_info/meta_info_DIV2K800sub_GT.txt
    # (for lmdb)
    # dataroot_gt: datasets/DIV2K/DIV2K_train_HR_sub.lmdb
    # dataroot_lq: datasets/DIV2K/DIV2K_train_LR_bicubic_X2_sub.lmdb
    filename_tmpl: '{}x2'
    meta_info_file: ../meta_info_sandstone2D_GT.txt
    io_backend:
      type: disk
      # (for lmdb)
      # type: lmdb
#    pin_memory: true
    gt_size: 256
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 1  # If Broken Pipe (set small, as 4)
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: Sandstone2D
    type: PairedImageDataset
    dataroot_gt: ../datasets/RockDataSet/DeepRockSR_test/sandstone2D/sandstone2D_test_HR
    dataroot_lq: ../datasets/RockDataSet/DeepRockSR_test/sandstone2D/sandstone2D_test_LR_default_X4
    io_backend:
      type: disk

# network structures
network_g:
  type: OBLKHN
  upscale: 4

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 3e-3  #3e-3
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
  #   type: MultiStepLR
  #   milestones: [2500, 5000, 7500, 10000] #[2000, 4000, 6000, 8000 10000]
  #   gamma: 0.5
    type: CosineAnnealingRestartLR
    periods: [40000]
    restart_weights: [1]
    eta_min: !!float 1e-7
  total_iter: 40000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0


# validation settings
val:
  val_freq: !!float 400
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: true
    ssim: # metric name, can be arbitrary
      type: calculate_ssim
      crop_border: 4S
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 800
  use_tb_logger: ~


# dist training settings
dist_params:
  backend: nccl
  port: 29500
